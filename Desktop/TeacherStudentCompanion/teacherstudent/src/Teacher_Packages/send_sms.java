/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Teacher_Packages;

import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.swing.table.AbstractTableModel;
import javax.xml.ws.Response;

/**
 *
 * @author Lab-3_1
 */
public class send_sms extends javax.swing.JFrame {

    StudentTableModel stm;
    ArrayList<studentinfo> al = new ArrayList<studentinfo>();
    String user, dept, course;

    
    public send_sms(String username, String course,String dept) {
        initComponents();
        setSize(887, 605);
        stm = new StudentTableModel();
        jTable1.setModel(stm);
        this.dept = dept;
        this.course = course;
        this.user = username;
       
        setVisible(true);
        stm.fireTableDataChanged();
        fetchstudents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setVisible(true);
                       
 


    }
     public void fetchstudents() {
        try {

            HttpResponse<String> httpResponse = Unirest.get("http://localhost:9595/fetchstudentinfo").queryString("dept", dept).queryString("cn", course).asString();

            String anws = httpResponse.getBody().trim();
            System.out.println(anws+"-----");
            StringTokenizer st = new StringTokenizer(anws, "^");

            System.out.println(anws);

            al.clear();
            while (st.hasMoreTokens()) {
                String s = st.nextToken();
                System.out.println(s + "=====");
                StringTokenizer st1 = new StringTokenizer(s, "#&%");

                String rollno = st1.nextToken();

                String em = st1.nextToken();
                String addr = st1.nextToken();
                String phno = st1.nextToken();

                String cn = st1.nextToken();
                String sem = st1.nextToken();

                String photo = st1.nextToken();
                System.out.println(" ");

                al.add(new studentinfo(rollno, em, phno, addr, sem, dept, cn, photo, false));

            }
            stm.fireTableDataChanged();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    class StudentTableModel extends AbstractTableModel {

        String title[] = {"Rollno", "Email", "Phoneno", "Address", "Semester","select"};

        public String getColumnName(int i) {
            return title[i];
        }

        @Override
        public int getRowCount() {
            return al.size();
        }

        @Override
        public int getColumnCount() {
            return 6;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            if (columnIndex == 0) {
                return al.get(rowIndex).rollno;

            } else if (columnIndex == 1) {
                return al.get(rowIndex).em;

            } else if (columnIndex == 2) {
                return al.get(rowIndex).phno;

            } else if (columnIndex == 3) {
                return al.get(rowIndex).addr;
            } else if (columnIndex == 4) {
                return al.get(rowIndex).sem;
            } else if (columnIndex == 5) {
                return al.get(rowIndex).ischecked;
            }
            return "null";
        }
         @Override
        public Class getColumnClass(int columnIndex) {
            switch (columnIndex) {
                case 0:
                    return String.class;
                case 1:
                    return String.class;
                case 2:
                    return String.class;
                case 3:
                    return String.class;
                case 4:
                    return String.class;
                case 5:
                    return Boolean.class;
                default:
                    return null;
            }
        }
          @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return columnIndex == 5;
        }

        @Override
        public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
            if (columnIndex == 5) {
                al.get(rowIndex).ischecked = (Boolean) aValue;
                fireTableCellUpdated(rowIndex, columnIndex);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jsms = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setText("Send SMS :");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(30, 30, 110, 40);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 140, 640, 200);

        jButton1.setText("Select All");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(40, 370, 170, 40);

        jButton2.setText("Deselect All");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(240, 370, 200, 40);

        jButton3.setText("Send");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(490, 370, 160, 40);

        jsms.setColumns(20);
        jsms.setRows(5);
        jScrollPane2.setViewportView(jsms);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(150, 20, 510, 100);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
               
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            jTable1.getModel().setValueAt(Boolean.TRUE, i, 5);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        for (int i = 0; i < jTable1.getRowCount(); i++) {
            jTable1.getModel().setValueAt(Boolean.FALSE, i, 5);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String message = jsms.getText();
          for (int i = 0; i < al.size(); i++) {
                if(al.get(i).ischecked){
                  String mobno = al.get(i).phno;
                  smscode.send(mobno,message);
                    
                }
          }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(send_sms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(send_sms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(send_sms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(send_sms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
              //  new send_sms().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jsms;
    // End of variables declaration//GEN-END:variables
}
