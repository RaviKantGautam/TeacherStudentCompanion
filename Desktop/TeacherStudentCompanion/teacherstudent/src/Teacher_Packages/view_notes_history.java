/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Teacher_Packages;

import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import com.mashape.unirest.http.exceptions.UnirestException;
import java.util.ArrayList;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableModel;
import javax.xml.ws.Response;
import teacherstudent.View_student;

/**
 *
 * @author Lab-3_1
 */
public class view_notes_history extends javax.swing.JFrame {

     String rollno, title, username, description, type, file, nid;
    teacherTableModel ttm;
    Response res;
    ArrayList<notesview>al= new ArrayList<notesview>();
    /**
     * Creates new form T_view_notes
     */
    public view_notes_history(String username) {
        initComponents();
         setSize(670, 505);
        setLocationRelativeTo(null);
       this.username=username;
        ttm = new teacherTableModel();
        jTable1.setModel((TableModel) ttm);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
         try {
             fetchnotes();
         } catch (UnirestException ex) {
          ex.printStackTrace();
         }
      
              
//        Response res;
        setVisible(true);
    }

      public void fetchnotes() throws UnirestException {
        HttpResponse<String> httpresponse = Unirest.get("http://127.0.0.1:9595/noteshistory")
                .queryString("username", username)
                .asString();
        al.clear();
        if (httpresponse.getStatus() == 200) {
            String ans = httpresponse.getBody();
            System.out.println(ans);
            StringTokenizer st = new StringTokenizer(ans, "^");
            while(st.hasMoreTokens())
            {
                String row = st.nextToken();
                StringTokenizer st1= new StringTokenizer(row,"!&");
         
            title = st1.nextToken();
            description = st1.nextToken();
            type = st1.nextToken();
            file = st1.nextToken();
            nid = st1.nextToken();
            
           

            
        al.add(new notesview(title, description, type, file, nid));
            }
        }
        ttm.fireTableDataChanged();
    }
        class teacherTableModel extends AbstractTableModel {
        String title[]={"Title","Description","Type","File"};
public String getColumnName(int i)
{
    return title[i];
}
        @Override
        public int getRowCount() {
            return al.size();
        }

        @Override
        public int getColumnCount() {
            return 4;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            if (columnIndex == 0) {
                return al.get(rowIndex).tt;

            }   else if (columnIndex == 1) {
                return al.get(rowIndex).des;

            } else if (columnIndex == 2) {
                return al.get(rowIndex).tp;
            }
            else if (columnIndex == 3) {
                return al.get(rowIndex).file;

            } 
            return "null";
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("SimSun-ExtB", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View Notes History");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(244, 11, 260, 50);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 80, 680, 300);

        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(120, 420, 190, 50);

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(410, 420, 190, 50);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int index = jTable1.getSelectedRow();
        if(index == -1){
        JOptionPane.showMessageDialog(this, "Please select one row");
        }
        else{
        
        int ch = JOptionPane.showConfirmDialog(this, "Are you sure you want to Delete?");
            if (ch == JOptionPane.YES_OPTION) {
                String nid = al.get(index).nid;
                System.out.println();

                try {
                    HttpResponse<String> httpResponse = Unirest.get("http://127.0.0.1:9595/deletenotes")
                            .queryString("nid", nid)
                            .asString();
                    
                    if(httpResponse.getStatus()==200){
                String ans =httpResponse.getBody().trim();
                if(ans.equals("success")){
                    JOptionPane.showMessageDialog(rootPane, "Selected notes is deleted Successfully");
                    fetchnotes();
                }
                else if(ans.equals("fail")){
                    JOptionPane.showMessageDialog(rootPane, "Error occur in Deleting notes");
                }
                }
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        }
    
        

                            
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(view_notes_history.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(view_notes_history.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(view_notes_history.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(view_notes_history.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            //    new view_notes_history().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}
